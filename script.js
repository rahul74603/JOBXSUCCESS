document.addEventListener("DOMContentLoaded", async function () {
    // тЬЕ Firebase SDK рд▓реЛрдб рдХрд░рдирд╛ (рдЬрд░реВрд░реА)
    if (typeof firebase === "undefined") {
        const firebaseScript = document.createElement("script");
        firebaseScript.src = "https://www.gstatic.com/firebasejs/9.6.1/firebase-app.js";
        firebaseScript.onload = () => {
            const dbScript = document.createElement("script");
            dbScript.src = "https://www.gstatic.com/firebasejs/9.6.1/firebase-database.js";
            dbScript.onload = initializeFirebase; // тЬЕ Firebase рд▓реЛрдб рд╣реЛрдиреЗ рдХреЗ рдмрд╛рдж рдЗрдирд┐рд╢рд┐рдпрд▓рд╛рдЗрдЬрд╝ рдХрд░реЗрдВ
            document.head.appendChild(dbScript);
        };
        document.head.appendChild(firebaseScript);
    } else {
        initializeFirebase(); // тЬЕ рдЕрдЧрд░ Firebase рдкрд╣рд▓реЗ рд╕реЗ рд▓реЛрдб рд╣реИ рддреЛ рдЗрдирд┐рд╢рд┐рдпрд▓рд╛рдЗрдЬрд╝ рдХрд░реЗрдВ
    }

    function initializeFirebase() {
        import("./firebase-config.js")
            .then((configModule) => {
                const firebaseConfig = configModule.default;

                if (!firebase.apps.length) {
                    firebase.initializeApp(firebaseConfig);
                }

                loadJobs(); // тЬЕ Firebase рд╕реЗ Jobs рд▓реЛрдб рдХрд░рдирд╛
            })
            .catch((error) => console.error("тЭМ Error loading Firebase config:", error));
    }

    // тЬЕ Jobs рд▓реЛрдб рдХрд░рдиреЗ рдХрд╛ рдлрдВрдХреНрд╢рди
    function loadJobs() {
        const jobsList = document.getElementById("jobsList");
        const db = firebase.database().ref("jobs");

        db.on("value", (snapshot) => {
            jobsList.innerHTML = ""; // тЬЕ рдкрд╣рд▓реЗ рдХреА рд▓рд┐рд╕реНрдЯ рд╣рдЯрд╛рдПрдБ
            const jobs = snapshot.val();

            if (jobs) {
                Object.keys(jobs).forEach((key) => {
                    const job = jobs[key];
                    const deadlineText = job.lastDate ? `ЁЯУЕ Last Date: ${job.lastDate}` : "";
                    
                    const jobElement = document.createElement("li");
                    jobElement.innerHTML = `
                        <div class="job-card">
                            <strong>${job.title}</strong> - <i>${job.company}</i>
                            <br> ЁЯУН Location: ${job.location}
                            <br> ${deadlineText}
                            <br> <a class="apply-btn" href="${job.applyLink}" target="_blank">ЁЯЪА Apply Now</a>
                        </div>
                    `;
                    jobsList.appendChild(jobElement);
                });
            } else {
                jobsList.innerHTML = "<li>рдХреЛрдИ рд╕рд░рдХрд╛рд░реА рдиреМрдХрд░реА рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ</li>";
            }
        });
    }

    // тЬЕ Study Materials Load рдХрд░рдиреЗ рдХрд╛ Code (GitHub рд╕реЗ)
    async function fetchStudyMaterials() {
        try {
            const url = "https://api.github.com/repos/rahul74603/JOBXSUCCESS/contents/study-materials";
            const response = await fetch(url);
            
            if (!response.ok) throw new Error(`HTTP Error! Status: ${response.status}`);
            
            const data = await response.json();
            const materialsList = document.getElementById("materials-list");

            materialsList.innerHTML = ""; // рдкреБрд░рд╛рдиреА рд▓рд┐рд╕реНрдЯ рдХреНрд▓рд┐рдпрд░ рдХрд░реЗрдВ

            data.forEach(item => {
                const li = document.createElement("li");
                li.innerHTML = `<h3>ЁЯУБ ${item.name}</h3>
                                <a href="${item.html_url}" target="_blank" class="download-btn">ЁЯФЧ Open</a>`;
                materialsList.appendChild(li);
            });

        } catch (error) {
            console.error("Error fetching study materials:", error);
        }
    }

    fetchStudyMaterials(); // тЬЕ GitHub рд╕реЗ Study Materials рд▓реЛрдб рдХрд░реЛ
});
